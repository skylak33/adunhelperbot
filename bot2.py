import time
import logging
import asyncio
import config
from base import *
from states import *
from random import *
import statistic
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import InputFile
MSG = "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª –ª–∏ —Ç—ã —Å–µ–≥–æ–¥–Ω—è, {}?"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=config.token)
storage = MemoryStorage()

dp = Dispatcher(bot, storage=storage)


@dp.message_handler(commands=["start"])
async def start_handler(message: types.Message):
    user_id = message.from_user.id
    alias = message.from_user.username
    logging.info(f'{user_id} {alias} {time.asctime()}')
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("–î–æ—Ö–æ–¥—ã", "–†–∞—Å—Ö–æ–¥—ã", "–°–±–µ—Ä–µ–∂–µ–Ω–∏—è")
    keyboard.add("–°–æ–≤–µ—Ç—ã", "–°–ø–æ—Å–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞")
    keyboard.add("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏")
    await message.answer(
        f"[üëã] –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, @{alias} \n"
        f"[üå∫] –° —Ç–æ–±–æ–π –Ω–∞ —Å–≤—è–∑—å –≤—ã—à–µ–ª - @adunhelperbot: \n"
        f"–¶–∏—Ñ—Ä–æ–≤–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤. \n"
        f"\n"
        f"                      ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡Æú‚ñ≤‡Æú‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê \n"
        f"[üí°] –ú–æ—è —Ü–µ–ª—å - —ç—Ç–æ –ø–æ–º–æ—á—å –í–∞–º —Å–æ—Å—Ç–∞–≤–∏—Ç—å –±—é–¥–∂–µ—Ç, \n"
        f"—É–∫–∞–∑—ã–≤–∞—è –Ω–∞ –≤–∞—à–∏ –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã. \n"
        f"                      ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡Æú‚ñ≤‡Æú‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê \n"
        f"\n"
        f"[‚òÄÔ∏è] –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å \n"
        f"—Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å—ã. \n",
        reply_markup=keyboard
    )
    db_add_user(user_id, f'@{alias}')
    current_savings = db_get_savings(user_id)


@dp.message_handler(text="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏" or "–î–∞")
async def start_handler_1(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="220", callback_data="–î–∞"),
        types.InlineKeyboardButton(text="22", callback_data="–ù–µ—Ç"),
        types.InlineKeyboardButton(text="228", callback_data="–ù–µ—Ç"),
        types.InlineKeyboardButton(text="2200", callback_data="–ù–µ—Ç"),
        types.InlineKeyboardButton(text="–ï—â–µ –≤–æ–ø—Ä–æ—Å", callback_data="–ï—â–µ1")

    ]
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*buttons)
    await message.answer("–í –±–∞–Ω–∫ –±—ã–ª –ø–æ–ª–æ–∂–µ–Ω –≤–∫–ª–∞–¥ –ø–æ–¥ 10% –≥–æ–¥–æ–≤—ã—Ö. –ß–µ—Ä–µ–∑ –≥–æ–¥, –ø–æ—Å–ª–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤, –≤–∫–ª–∞–¥—á–∏–∫ —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ 2000 —Ä—É–±–ª–µ–π, –∞ –µ—â–µ —á–µ—Ä–µ–∑ –≥–æ–¥ (–æ–ø—è—Ç—å –ø–æ—Å–ª–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤) —Å–Ω–æ–≤–∞ –≤–Ω–µ—Å 2000 —Ä—É–±–ª–µ–π. –í—Å–ª–µ–¥—Å—Ç–≤–∏–µ —ç—Ç–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π —á–µ—Ä–µ–∑ —Ç—Ä–∏ –≥–æ–¥–∞ —Å–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–∫–ª–∞–¥–∞ –≤–∫–ª–∞–¥—á–∏–∫ –ø–æ–ª—É—á–∏–ª —Å—É–º–º—É –º–µ–Ω—å—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π (–µ—Å–ª–∏ –±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å–æ –≤–∫–ª–∞–¥–æ–º). –ù–∞ —Å–∫–æ–ª—å–∫–æ —Ä—É–±–ª–µ–π –º–µ–Ω—å—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—É–º–º—ã –æ–Ω –ø–æ–ª—É—á–∏–ª?", reply_markup=keyboard)


@dp.callback_query_handler(text="–î–∞")
async def send_random_value(call: types.CallbackQuery):
    await call.message.answer("–í–µ—Ä–Ω–æ. –ó–∞ 3 –≥–æ–¥–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç—Ç–∏—Ö –¥–µ–Ω–µ–≥ –≤–∫–ª–∞–¥ –≤—ã—Ä–æ—Å –±—ã –≤ 1.331 —Ä–∞–∑")


@dp.callback_query_handler(text="–ù–µ—Ç")
async def send_random_value(call: types.CallbackQuery):
    await call.message.answer("–ù–µ–≤–µ—Ä–Ω–æ. –ó–∞ 3 –≥–æ–¥–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç—Ç–∏—Ö –¥–µ–Ω–µ–≥ –≤–∫–ª–∞–¥ –≤—ã—Ä–æ—Å –±—ã –≤ 1.331 —Ä–∞–∑. –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∑–∞ –ø–µ—Ä–≤—ã–π –≥–æ–¥ –Ω–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è. –¢–æ–≥–¥–∞ –æ—Ç–≤–µ—Ç —Ä–∞–≤–µ–Ω 220")
    return
@dp.callback_query_handler(text="–î–∞1")
async def send_random_value(call: types.CallbackQuery):
    await call.message.answer("–í–µ—Ä–Ω–æ.")


@dp.callback_query_handler(text="–ù–µ—Ç1")
async def send_random_value(call: types.CallbackQuery):
    await call.message.answer("–ù–µ–≤–µ—Ä–Ω–æ. ")
    return

@dp.callback_query_handler(text="–ï—â–µ1")
async def send_random_value(call: types.CallbackQuery):
    lenv = statistic.lenv
    number = randint(0, lenv - 1)
    quest = statistic.v[number]
    answers = statistic.v0[number]
    buttons = [
        types.InlineKeyboardButton(text=answers[0], callback_data="–î–∞1"),
        types.InlineKeyboardButton(text=answers[1], callback_data="–ù–µ—Ç1"),
        types.InlineKeyboardButton(text=answers[2], callback_data="–ù–µ—Ç1"),
        types.InlineKeyboardButton(text="–ï—â–µ –≤–æ–ø—Ä–æ—Å", callback_data="–ï—â–µ1")
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*buttons)
    await call.message.answer(quest, reply_markup=keyboard)

# –î–æ—Ö–æ–¥—ã


# _______________________________________________________________
# –†–∞—Å—Ö–æ–¥—ã


# _______________________________________________________________
# –°–±–µ—Ä–µ–∂–µ–Ω–∏—è


@dp.message_handler(text="–°–ø–æ—Å–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞")
async def cmd_inline_url(message: types.CallbackQuery):
    buttons = [
        types.InlineKeyboardButton(text="–û–Ω–ª–∞–π–Ω", callback_data="–û–Ω–ª–∞–π–Ω"),
        types.InlineKeyboardButton(text="–û—Ñ–ª–∞–π–Ω", callback_data="–û—Ñ–ª–∞–π–Ω")
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await message.answer("–Ø –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–±–µ 2 —Å–ø–æ—Å–æ–±–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞. –ü–µ—Ä–≤—ã–π  —Å–ø–æ—Å–æ–± –∑–∞—Ä–∞–±–æ—Ç–∫–∞. –ë–∏—Ä–∂–∞ —Ñ—Ä–∏–ª–∞–Ω—Å–∞ –∏ –æ–Ω–ª–∞–π–Ω –∏–≥—Ä—ã ‚Äî —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –í—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± –∑–∞—Ä–∞–±–æ—Ç–∫–∞. –æ—Ñ–ª–∞–π–Ω-—Ä–∞–±–æ—Ç–∞ –¥–ª—è –ø–æ–¥—Ä–æ—Å—Ç–∫–∞ - —ç—Ç–æ –ø—Ä–æ—Å—Ç—ã–µ —Ä–∞–±–æ—Ç—ã (—É–±–æ—Ä–∫–∞, –ø–æ–∫—Ä–∞—Å–∫–∞, —Ä–∞—Å–∫–ª–µ–π–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π), –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ  –º–æ–∂–Ω–æ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –±–µ–∑ –ø—Ä–æ–±–ª–µ–º.", reply_markup=keyboard)


@dp.callback_query_handler(text="–û–Ω–ª–∞–π–Ω")
async def send_random_value(call: types.CallbackQuery):
    await call.message.answer("–°–∞–π—Ç https://www.fl.ru/, –∑–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ —Å–µ–±–µ –∑–∞–∫–∞–∑—ã –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–ª–∏ –º–æ–Ω—Ç–∞–∂—É –≤–∏–¥–µ–æ.\n–°–∞–π—Ç https://funpay.com/, –∑–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏, –ø—Ä–æ—Å—Ç–æ –∏–≥—Ä–∞—è –≤ –∏–≥—Ä—ã.\n–¢–∞–∫–∂–µ –µ—Å—Ç—å —Å–∞–π—Ç https://www.anketka.ru/ru/, –≥–¥–µ —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Ö–æ–¥—è –æ–ø—Ä–æ—Å—ã.")


@dp.callback_query_handler(text="–û—Ñ–ª–∞–π–Ω")
async def send_random_value(call: types.CallbackQuery):
    await call.message.answer("–ó–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏.\n–ù–∞ —Å–∞–π—Ç–µ  https://hh.ru/  —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Ä–∞–±–æ—Ç—É, —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É –∏–ª–∏ –ø–æ–¥—Ä–∞–±–æ—Ç–∫—É. –†–∞–∑–º–µ—â–∞–π —Å–≤–æ—ë —Ä–µ–∑—é–º–µ –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –æ—Ç —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π. ")


@dp.message_handler(text="–°–æ–≤–µ—Ç—ã")
async def cmd_inline_url_1(message: types.CallbackQuery):
    buttons = [
        types.InlineKeyboardButton(text="E—â–µ", callback_data="–ï—â–µ"),
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)

    await message.answer(f"–°–æ–≤–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –≤ –≤–∑—Ä–æ—Å–ª–æ–π –∂–∏–∑–Ω–∏ :\n \n{statistic.s[randint(0, statistic.lens - 1)]}", reply_markup=keyboard)


@dp.callback_query_handler(text="–ï—â–µ")
async def send_random_value(call: types.CallbackQuery):
    buttons = [
        types.InlineKeyboardButton(text="E—â–µ", callback_data="–ï—â–µ"),
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await call.message.answer(statistic.s[randint(0, statistic.lens - 1)], reply_markup=keyboard)


@dp.message_handler(text="–î–æ—Ç–∞")
async def cmd_inline_url_1(message: types.CallbackQuery):
    photo = InputFile("pudge.jpeg")

    await bot.send_photo(chat_id=message.chat.id, photo=photo)
if __name__ == "__main__":
    executor.start_polling(dp)
